import { Plugin } from 'vite';

/**
 * Vite plugin that creates a virtual module for tool imports
 * This allows us to map tool IDs to their actual import paths
 */
export default function virtualTools(): Plugin {
  const virtualModuleId = 'virtual:tools';
  const resolvedVirtualModuleId = '\0' + virtualModuleId;

  return {
    name: 'virtual-tools',
    resolveId(id) {
      if (id === virtualModuleId) {
        return resolvedVirtualModuleId;
      }
    },
    load(id) {
      if (id === resolvedVirtualModuleId) {
        return `
          // This file is auto-generated by the virtual-tools plugin
          // It maps tool IDs to their actual import paths
          
          // Store the importers in a constant
          const toolImporters = {
            'duct-sizer': () => import('@/tools/duct-sizer')
          };
          
          // Export the tools object
          export const tools = toolImporters;
          
          // Export the getToolImporter function
          export function getToolImporter(toolId) {
            if (!toolImporters[toolId]) {
              throw new Error(\`Tool with ID '\${toolId}' not found\`);
            }
            return toolImporters[toolId];
          }
          
          // Export default for backward compatibility
          export default {
            tools,
            getToolImporter
          };
        `;
      }
    },
  };
}
